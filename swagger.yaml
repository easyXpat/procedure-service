basePath: /
consumes:
- application/json
definitions:
  GenericError:
    properties:
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/easyXpat/procedure-service/handlers
  Procedure:
    description: Procedure defines the structure for an API procedure
    properties:
      city:
        description: city for the procedure
        maxLength: 32
        type: string
        x-go-name: City
      created_at:
        description: creation time for the procedure
        format: date-time
        type: string
        x-go-name: CreatedAt
      description:
        description: description for the procedure
        maxLength: 10000
        type: string
        x-go-name: Description
      id:
        description: unique id for the procedure
        maxLength: 255
        minimum: 1
        type: string
        x-go-name: ID
      name:
        description: name for the procedure
        maxLength: 255
        type: string
        x-go-name: Name
      steps:
        $ref: '#/definitions/Steps'
      steps_map:
        description: steps mapping for the procedure
        x-go-name: StepsMapping
      updated_at:
        description: last update time for the procedure
        format: date-time
        type: string
        x-go-name: UpdatedAt
    required:
    - name
    type: object
    x-go-package: github.com/easyXpat/procedure-service/data
  Step:
    description: Step defines the structure for an API step
    properties:
      CreatedAt:
        description: creation time for the step
        format: date-time
        type: string
      Description:
        description: description for the step
        maxLength: 1000
        minimum: 1
        type: string
      UpdatedAt:
        description: last update time for the step
        format: date-time
        type: string
      city:
        description: city for the step. In case the step is city specific
        maxLength: 255
        minimum: 1
        type: string
        x-go-name: City
      id:
        description: unique id for the step
        maxLength: 255
        minimum: 1
        type: string
        x-go-name: ID
      name:
        description: name for the step
        maxLength: 255
        minimum: 1
        type: string
        x-go-name: Name
      procedure_name:
        description: procedure name of the step. In case the step is procedure specific.
        maxLength: 255
        minimum: 1
        type: string
        x-go-name: ProcedureName
    required:
    - name
    type: object
    x-go-package: github.com/easyXpat/procedure-service/data
  Steps:
    items:
      $ref: '#/definitions/Step'
    type: array
    x-go-package: github.com/easyXpat/procedure-service/data
  ValidationError:
    description: ValidationError is a collection of validation error messages
    properties:
      messages:
        items:
          type: string
        type: array
        x-go-name: Messages
    type: object
    x-go-package: github.com/easyXpat/procedure-service/handlers
info:
  description: Documentation for Procedure API
  title: of Procedure API
  version: 1.0.0
paths:
  /procedures:
    get:
      description: return all procedures from the database
      operationId: getProcedures
      responses:
        "200":
          $ref: '#/responses/proceduresResponse'
      tags:
      - procedures
    post:
      description: Create a new procedure
      operationId: createProcedure
      responses:
        "200":
          $ref: '#/responses/procedureResponse'
        "400":
          $ref: '#/responses/errorValidation'
        "422":
          $ref: '#/responses/errorValidation'
        "501":
          $ref: '#/responses/errorResponse'
      tags:
      - procedures
    put:
      description: Update existing procedure
      operationId: updateProcedure
      responses:
        "200":
          $ref: '#/responses/procedureResponse'
      tags:
      - procedures
  /procedures/{id}:
    delete:
      description: Delete an existing procedure
      operationId: deleteProcedure
      responses:
        "200":
          $ref: '#/responses/procedureResponse'
        "404":
          $ref: '#/responses/errorValidation'
      tags:
      - procedures
    get:
      description: list single procedure from db
      operationId: getProcedure
      responses:
        "200":
          $ref: '#/responses/procedureResponse'
      tags:
      - procedures
  /steps:
    get:
      description: return all steps from the database
      operationId: getSteps
      responses:
        "200":
          $ref: '#/responses/stepsResponse'
      tags:
      - steps
    post:
      description: Create a new step
      operationId: createStep
      responses:
        "200":
          $ref: '#/responses/stepResponse'
      tags:
      - steps
    put:
      description: Update existing step
      operationId: updateStep
      responses:
        "200":
          $ref: '#/responses/stepResponse'
      tags:
      - steps
  /steps/{id}:
    delete:
      description: Delete an existing ste[
      operationId: deleteStep
      responses:
        "200":
          $ref: '#/responses/stepResponse'
        "404":
          $ref: '#/responses/errorValidation'
      tags:
      - steps
    get:
      description: list single step from db
      operationId: getStep
      responses:
        "200":
          $ref: '#/responses/stepResponse'
      tags:
      - steps
produces:
- application/json
responses:
  errorResponse:
    description: Generic error message returned as a string
    schema:
      $ref: '#/definitions/GenericError'
  errorValidation:
    description: Validation errors defined as an array of strings
    schema:
      $ref: '#/definitions/ValidationError'
  procedureResponse:
    description: Data structure representing a single procedure
    schema:
      $ref: '#/definitions/Procedure'
  proceduresResponse:
    description: A list of procedures
    schema:
      items:
        $ref: '#/definitions/Procedure'
      type: array
  stepResponse:
    description: Data structure representing a single step
    schema:
      $ref: '#/definitions/Step'
  stepsResponse:
    description: A list of steps
    schema:
      items:
        $ref: '#/definitions/Step'
      type: array
schemes:
- http
swagger: "2.0"
